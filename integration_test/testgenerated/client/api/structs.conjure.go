// Copyright (c) 2018 Palantir Technologies. All rights reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// This file was generated by Conjure and should not be manually edited.

package api

import (
	"encoding/json"
)

type CustomObject struct {
	Data []byte `json:"data" yaml:"data,omitempty"`
}

func (o CustomObject) MarshalJSON() ([]byte, error) {
	if o.Data == nil {
		o.Data = make([]byte, 0)
	}
	type CustomObjectAlias CustomObject
	return json.Marshal(CustomObjectAlias(o))
}

func (o *CustomObject) UnmarshalJSON(data []byte) error {
	type CustomObjectAlias CustomObject
	var rawCustomObject CustomObjectAlias
	if err := json.Unmarshal(data, &rawCustomObject); err != nil {
		return err
	}
	if rawCustomObject.Data == nil {
		rawCustomObject.Data = make([]byte, 0)
	}
	*o = CustomObject(rawCustomObject)
	return nil
}

func (o CustomObject) MarshalYAML() (interface{}, error) {
	if o.Data == nil {
		o.Data = make([]byte, 0)
	}
	type CustomObjectAlias CustomObject
	return CustomObjectAlias(o), nil
}

func (o *CustomObject) UnmarshalYAML(unmarshal func(interface{}) error) error {
	type CustomObjectAlias CustomObject
	var rawCustomObject CustomObjectAlias
	if err := unmarshal(&rawCustomObject); err != nil {
		return err
	}
	if rawCustomObject.Data == nil {
		rawCustomObject.Data = make([]byte, 0)
	}
	*o = CustomObject(rawCustomObject)
	return nil
}
